image:
  registry: myregistry.com
  repository: repository
  tag: 1.2.3

tenantId: tenant-id
keyVaultName: keyvault-name

# Use keyVaultIdentity in order to use the classic VM identity
keyVaultIdentity: my-vm-identity
# For newer setups use the workloadIdentity
workloadIdentity: workload-identity-client-id

host: my.domain.com
nodepool: nodepool

# The default serviceaccount to use
serviceAccount: app

serviceAccounts:
  app: 
    workloadIdentity: override-identity-client-id
    enableWorkloadIdentity: true

persistentVolumeClaims:
  data:
    resources:
      requests:
        storage: 1Gi

jobs:
  migrate:
    annotations:
      helm.sh/hook: post-install,post-upgrade
    labels:
      component: migrate
    volumes:
      - name: tmp
        spec:
          emptyDir: {}
    containers:
      - name: main
        secrets:
          - vault
        volumes:
          - name: tmp
            mountPath: /tmp
        command:
          - python
          - manage.py
          - migrate

cronJobs:
  migrate:
    labels:
      component: import
    schedule: "0 * * * *"
    volumes:
      - name: tmp
        mountPath: /tmp
        spec:
          emptyDir: {}
    containers:
      - name: main
        volumes:
          - name: tmp
            mountPath: /tmp
        secrets:
          - vault
        command:
          - python
          - manage.py
          - import_api

deployments:
  app:
    securityContext:
      runAsUser: 2000
    labels:
      component: app
    autoscale:
      cpu: 70
      memory: 90
      min: 3
      max: 8
    resources:
      requests:
        cpu: 1
        memory: "512Mi"
      limits:
        cpu: 1
        memory: "512Mi"
    volumes:
      - name: data
        persistentVolumeClaim: data
      - name: tmp
        spec:
          emptyDir: {}
    serviceAccount: app
    containers:
      - name: main
        resources:
          limits:
            cpu: 4
        secrets:
          - simple
        volumes:
          - name: tmp
            mountPath: /tmp
      - name: foo
        image: 
          tag: "1.3.3.7"
        command:
          - sleep
        args:
          - "10"
        volumes:
          - name: data
            mountPath: /data
        secrets:
          - vault

secrets:
  simple:
    type: opaque
    secrets:
      foo: bar
      hello: world
  vault:
    type: keyvault
    secrets:
      - secret1
      - secret2
      - secret3

services:
  app:
    selector:
      component: app
    ports:
      - port: 8000
        targetPort: http

ingress:
  app-external:
    className: nginx
    paths:
      - path: /
        pathType: Prefix
        service: app
        port: 8000
    tls:
      secretName: certificate
      secretNameOverride: null
